# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from FileExchange import fileexchange_pb2 as FileExchange_dot_fileexchange__pb2
from ProccesingDatabase import processingdatabase_pb2 as ProccesingDatabase_dot_processingdatabase__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in ProccesingDatabase/processingdatabase_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProcessingDatabaseRecordsStub(object):
    """		'Records' table			
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InsertRecords = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/InsertRecords',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsResponse.FromString,
                _registered_method=True)
        self.ImportCsv = channel.stream_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/ImportCsv',
                request_serializer=FileExchange_dot_fileexchange__pb2.FileData.SerializeToString,
                response_deserializer=FileExchange_dot_fileexchange__pb2.UploadStatus.FromString,
                _registered_method=True)
        self.GetRecordsByStatus = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetRecordsByStatus',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusResponse.FromString,
                _registered_method=True)
        self.GetEmbeddingsByStatus = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetEmbeddingsByStatus',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusResponse.FromString,
                _registered_method=True)
        self.GetRecordById = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetRecordById',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdResponse.FromString,
                _registered_method=True)
        self.UpdateRecordById = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/UpdateRecordById',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdResponse.FromString,
                _registered_method=True)
        self.Authentication = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/Authentication',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationResponse.FromString,
                _registered_method=True)
        self.ClearTable = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/ClearTable',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.ClearTableRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.ClearTableResponse.FromString,
                _registered_method=True)


class ProcessingDatabaseRecordsServicer(object):
    """		'Records' table			
    """

    def InsertRecords(self, request, context):
        """Inserts data into a table, one at a time, in a batch, or from a csv file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportCsv(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecordsByStatus(self, request, context):
        """Getting data by status, allowed only for preprocessor and processor
        For preprocessor allowed status is only NEW, for processor allowed NEW and PREPROCESSED (depends on processor posibilities) status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmbeddingsByStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecordById(self, request, context):
        """Getting data by Id, use for getting data after search
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRecordById(self, request, context):
        """Updating data after preprocessing or processing, status will be updated automatically
        rpc UpdateRecordBatchById(UpdateRecordBatchByIdRequest) returns (UpdateRecordBatchByIdResponse); not used now
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authentication(self, request, context):
        """Deleting old Records, firstly we should delete this records from all another databases!
        rpc DeleteRecordsById(DeleteRecordsByIdRequest) returns (DeleteRecordsByIdResponse); may be useful later

        !!!!!FOR TEST ENVIRONMENT ONLY!!!!!! Clearing table 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessingDatabaseRecordsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InsertRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertRecords,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsResponse.SerializeToString,
            ),
            'ImportCsv': grpc.stream_unary_rpc_method_handler(
                    servicer.ImportCsv,
                    request_deserializer=FileExchange_dot_fileexchange__pb2.FileData.FromString,
                    response_serializer=FileExchange_dot_fileexchange__pb2.UploadStatus.SerializeToString,
            ),
            'GetRecordsByStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecordsByStatus,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusResponse.SerializeToString,
            ),
            'GetEmbeddingsByStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmbeddingsByStatus,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusResponse.SerializeToString,
            ),
            'GetRecordById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecordById,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdResponse.SerializeToString,
            ),
            'UpdateRecordById': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRecordById,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdResponse.SerializeToString,
            ),
            'Authentication': grpc.unary_unary_rpc_method_handler(
                    servicer.Authentication,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationResponse.SerializeToString,
            ),
            'ClearTable': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearTable,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.ClearTableRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.ClearTableResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Dressy.ProcessingDatabase.ProcessingDatabaseRecords', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Dressy.ProcessingDatabase.ProcessingDatabaseRecords', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProcessingDatabaseRecords(object):
    """		'Records' table			
    """

    @staticmethod
    def InsertRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/InsertRecords',
            ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.InsertRecordsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ImportCsv(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/ImportCsv',
            FileExchange_dot_fileexchange__pb2.FileData.SerializeToString,
            FileExchange_dot_fileexchange__pb2.UploadStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRecordsByStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetRecordsByStatus',
            ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.GetRecordsByStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEmbeddingsByStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetEmbeddingsByStatus',
            ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.GetEmbeddingsByStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRecordById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/GetRecordById',
            ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.GetRecordByIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRecordById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/UpdateRecordById',
            ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.UpdateRecordByIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Authentication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/Authentication',
            ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.AuthenticationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClearTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseRecords/ClearTable',
            ProccesingDatabase_dot_processingdatabase__pb2.ClearTableRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.ClearTableResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProcessingDatabaseUsersStub(object):
    """		'Users' table		

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserEmbeddingByKey = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/GetUserEmbeddingByKey',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyResponse.FromString,
                _registered_method=True)
        self.IsRecordViewedByUser = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/IsRecordViewedByUser',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserResponse.FromString,
                _registered_method=True)
        self.AddViewedRecordToUser = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/AddViewedRecordToUser',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserResponse.FromString,
                _registered_method=True)
        self.DeleteUserById = channel.unary_unary(
                '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/DeleteUserById',
                request_serializer=ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdRequest.SerializeToString,
                response_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdResponse.FromString,
                _registered_method=True)


class ProcessingDatabaseUsersServicer(object):
    """		'Users' table		

    """

    def GetUserEmbeddingByKey(self, request, context):
        """Returns user embedding by Key, if requested key is absent then this is a new user, so his Key will be added and the embedding will be generated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsRecordViewedByUser(self, request, context):
        """Checking whether the user has seen the record or not
        ! Returns "true" ONLY if requested user_id and record_id_list is present, and requested record_id is present in record_id_list !
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddViewedRecordToUser(self, request, context):
        """Adds user viewed record to the table, should be executed on the stage of user reaction processing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserById(self, request, context):
        """Deleting user data, should be executed when we got a message from backend about user's decision to delete his account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessingDatabaseUsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserEmbeddingByKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserEmbeddingByKey,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyResponse.SerializeToString,
            ),
            'IsRecordViewedByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.IsRecordViewedByUser,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserResponse.SerializeToString,
            ),
            'AddViewedRecordToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddViewedRecordToUser,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserResponse.SerializeToString,
            ),
            'DeleteUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserById,
                    request_deserializer=ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdRequest.FromString,
                    response_serializer=ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Dressy.ProcessingDatabase.ProcessingDatabaseUsers', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Dressy.ProcessingDatabase.ProcessingDatabaseUsers', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProcessingDatabaseUsers(object):
    """		'Users' table		

    """

    @staticmethod
    def GetUserEmbeddingByKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/GetUserEmbeddingByKey',
            ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.GetUserEmbeddingByKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IsRecordViewedByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/IsRecordViewedByUser',
            ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.IsRecordViewedByUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddViewedRecordToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/AddViewedRecordToUser',
            ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.AddViewedRecordToUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Dressy.ProcessingDatabase.ProcessingDatabaseUsers/DeleteUserById',
            ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdRequest.SerializeToString,
            ProccesingDatabase_dot_processingdatabase__pb2.DeleteUserByIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
